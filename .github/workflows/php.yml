name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.2', '7.3', '7.4']
        
    name: PHP ${{ matrix.php-versions }} Test
    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: Run test suite
      run: composer run-script test

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Quality assurance
      env:
        CODE_COVERAGE: yes
      run: vendor/bin/phpunit --bootstrap vendor/autoload.php --whitelist Formularium --coverage-clover ./clover.xml tests/

    # For code coverage report we are uploading our code coverage report to scrutinizer
    - name: Downloading scrutinizer ocular.phar
      run: wget https://scrutinizer-ci.com/ocular.phar

    # Uploading reports for analysis
    - name: Uploading code coverage to scrutinize
      run: php ocular.phar code-coverage:upload --format=php-clover ./coverage.xml

    - name: Quality assurance
      env: 
        STATIC_ANALYSIS: yes
      run: vendor/bin/phpstan analyze Formularium

    - name: Make kitchen sink
      run: php util/makeKitchenSink.php

    - name: Create api doc
      env:
        CODE_COVERAGE: yes
        DOCUMENTATION: yes
      run: composer apidoc
    
    - name: Nojekyll
      run: touch docs/coverage-report/.nojekyll

#     - name: Publish pages
#       deploy:
#         provider: pages:git
#         token: ${GITHUB_TOKEN}
#         edge: true
#         verbose: true
#         local_dir: docs/

